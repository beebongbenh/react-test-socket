{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect, visuallyHidden as visuallyHiddenStyle } from '@mui/utils';\nimport { useButton } from '../useButton';\nimport { SelectActionTypes } from './useSelect.types';\nimport { ListActionTypes, useList } from '../useList';\nimport { defaultOptionStringifier } from './defaultOptionStringifier';\nimport { useCompoundParent } from '../useCompound';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { selectReducer } from './selectReducer';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nfunction defaultFormValueProvider(selectedOption) {\n  if (Array.isArray(selectedOption)) {\n    if (selectedOption.length === 0) {\n      return '';\n    }\n    return JSON.stringify(selectedOption.map(function (o) {\n      return o.value;\n    }));\n  }\n  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {\n    return '';\n  }\n  if (typeof selectedOption.value === 'string' || typeof selectedOption.value === 'number') {\n    return selectedOption.value;\n  }\n  return JSON.stringify(selectedOption.value);\n}\n\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useSelect API](https://mui.com/base-ui/react-select/hooks-api/#use-select)\n */\nfunction useSelect(props) {\n  var areOptionsEqual = props.areOptionsEqual,\n    buttonRefProp = props.buttonRef,\n    _props$defaultOpen = props.defaultOpen,\n    defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n    defaultValueProp = props.defaultValue,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    listboxIdProp = props.listboxId,\n    listboxRefProp = props.listboxRef,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? false : _props$multiple,\n    name = props.name,\n    required = props.required,\n    onChange = props.onChange,\n    onHighlightChange = props.onHighlightChange,\n    onOpenChange = props.onOpenChange,\n    openProp = props.open,\n    optionsParam = props.options,\n    _props$getOptionAsStr = props.getOptionAsString,\n    getOptionAsString = _props$getOptionAsStr === void 0 ? defaultOptionStringifier : _props$getOptionAsStr,\n    _props$getSerializedV = props.getSerializedValue,\n    getSerializedValue = _props$getSerializedV === void 0 ? defaultFormValueProvider : _props$getSerializedV,\n    valueProp = props.value,\n    _props$componentName = props.componentName,\n    componentName = _props$componentName === void 0 ? 'useSelect' : _props$componentName;\n  var buttonRef = React.useRef(null);\n  var handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  var listboxRef = React.useRef(null);\n  var listboxId = useId(listboxIdProp);\n  var defaultValue;\n  if (valueProp === undefined && defaultValueProp === undefined) {\n    defaultValue = [];\n  } else if (defaultValueProp !== undefined) {\n    if (multiple) {\n      defaultValue = defaultValueProp;\n    } else {\n      defaultValue = defaultValueProp == null ? [] : [defaultValueProp];\n    }\n  }\n  var value = React.useMemo(function () {\n    if (valueProp !== undefined) {\n      if (multiple) {\n        return valueProp;\n      }\n      return valueProp == null ? [] : [valueProp];\n    }\n    return undefined;\n  }, [valueProp, multiple]);\n  var _useCompoundParent = useCompoundParent(),\n    subitems = _useCompoundParent.subitems,\n    compoundComponentContextValue = _useCompoundParent.contextValue;\n  var options = React.useMemo(function () {\n    if (optionsParam != null) {\n      return new Map(optionsParam.map(function (option, index) {\n        return [option.value, {\n          value: option.value,\n          label: option.label,\n          disabled: option.disabled,\n          ref: /*#__PURE__*/React.createRef(),\n          id: \"\".concat(listboxId, \"_\").concat(index)\n        }];\n      }));\n    }\n    return subitems;\n  }, [optionsParam, subitems, listboxId]);\n  var handleListboxRef = useForkRef(listboxRefProp, listboxRef);\n  var _useButton = useButton({\n      disabled: disabled,\n      rootRef: handleButtonRef\n    }),\n    getButtonRootProps = _useButton.getRootProps,\n    buttonActive = _useButton.active,\n    buttonFocusVisible = _useButton.focusVisible,\n    mergedButtonRef = _useButton.rootRef;\n  var optionValues = React.useMemo(function () {\n    return Array.from(options.keys());\n  }, [options]);\n  var getOptionByValue = React.useCallback(function (valueToGet) {\n    // This can't be simply `options.get(valueToGet)` because of the `areOptionsEqual` prop.\n    // If it's provided, we assume that the user wants to compare the options by value.\n    if (areOptionsEqual !== undefined) {\n      var similarValue = optionValues.find(function (optionValue) {\n        return areOptionsEqual(optionValue, valueToGet);\n      });\n      return options.get(similarValue);\n    }\n    return options.get(valueToGet);\n  }, [options, areOptionsEqual, optionValues]);\n  var isItemDisabled = React.useCallback(function (valueToCheck) {\n    var _option$disabled;\n    var option = getOptionByValue(valueToCheck);\n    return (_option$disabled = option == null ? void 0 : option.disabled) != null ? _option$disabled : false;\n  }, [getOptionByValue]);\n  var stringifyOption = React.useCallback(function (valueToCheck) {\n    var option = getOptionByValue(valueToCheck);\n    if (!option) {\n      return '';\n    }\n    return getOptionAsString(option);\n  }, [getOptionByValue, getOptionAsString]);\n  var controlledState = React.useMemo(function () {\n    return {\n      selectedValues: value,\n      open: openProp\n    };\n  }, [value, openProp]);\n  var getItemId = React.useCallback(function (itemValue) {\n    var _options$get;\n    return (_options$get = options.get(itemValue)) == null ? void 0 : _options$get.id;\n  }, [options]);\n  var handleSelectionChange = React.useCallback(function (event, newValues) {\n    if (multiple) {\n      onChange == null || onChange(event, newValues);\n    } else {\n      var _newValues$;\n      onChange == null || onChange(event, (_newValues$ = newValues[0]) != null ? _newValues$ : null);\n    }\n  }, [multiple, onChange]);\n  var handleHighlightChange = React.useCallback(function (event, newValue) {\n    onHighlightChange == null || onHighlightChange(event, newValue != null ? newValue : null);\n  }, [onHighlightChange]);\n  var handleStateChange = React.useCallback(function (event, field, fieldValue) {\n    if (field === 'open') {\n      onOpenChange == null || onOpenChange(fieldValue);\n      if (fieldValue === false && (event == null ? void 0 : event.type) !== 'blur') {\n        var _buttonRef$current;\n        (_buttonRef$current = buttonRef.current) == null || _buttonRef$current.focus();\n      }\n    }\n  }, [onOpenChange]);\n  var getItemDomElement = React.useCallback(function (itemId) {\n    var _subitems$get$ref$cur, _subitems$get;\n    if (itemId == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  var useListParameters = {\n    getInitialState: function getInitialState() {\n      var _defaultValue;\n      return {\n        highlightedValue: null,\n        selectedValues: (_defaultValue = defaultValue) != null ? _defaultValue : [],\n        open: defaultOpen\n      };\n    },\n    getItemId: getItemId,\n    controlledProps: controlledState,\n    focusManagement: 'DOM',\n    getItemDomElement: getItemDomElement,\n    itemComparer: areOptionsEqual,\n    isItemDisabled: isItemDisabled,\n    rootRef: handleListboxRef,\n    onChange: handleSelectionChange,\n    onHighlightChange: handleHighlightChange,\n    onStateChange: handleStateChange,\n    reducerActionContext: React.useMemo(function () {\n      return {\n        multiple: multiple\n      };\n    }, [multiple]),\n    items: optionValues,\n    getItemAsString: stringifyOption,\n    selectionMode: multiple ? 'multiple' : 'single',\n    stateReducer: selectReducer,\n    componentName: componentName\n  };\n  var _useList = useList(useListParameters),\n    dispatch = _useList.dispatch,\n    getListboxRootProps = _useList.getRootProps,\n    listContextValue = _useList.contextValue,\n    _useList$state = _useList.state,\n    open = _useList$state.open,\n    highlightedOption = _useList$state.highlightedValue,\n    selectedOptions = _useList$state.selectedValues,\n    mergedListRootRef = _useList.rootRef;\n\n  // store the initial open state to prevent focus stealing\n  // (the first option gets focused only when the select is opened by the user)\n  var isInitiallyOpen = React.useRef(open);\n  useEnhancedEffect(function () {\n    if (open && highlightedOption !== null) {\n      var _getOptionByValue;\n      var optionRef = (_getOptionByValue = getOptionByValue(highlightedOption)) == null ? void 0 : _getOptionByValue.ref;\n      if (!listboxRef.current || !(optionRef != null && optionRef.current)) {\n        return;\n      }\n      if (!isInitiallyOpen.current) {\n        optionRef.current.focus({\n          preventScroll: true\n        });\n      }\n      var listboxClientRect = listboxRef.current.getBoundingClientRect();\n      var optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [open, highlightedOption, getOptionByValue]);\n  var getOptionMetadata = React.useCallback(function (optionValue) {\n    return getOptionByValue(optionValue);\n  }, [getOptionByValue]);\n  var createHandleButtonClick = function createHandleButtonClick(externalEventHandlers) {\n    return function (event) {\n      var _externalEventHandler;\n      externalEventHandlers == null || (_externalEventHandler = externalEventHandlers.onClick) == null || _externalEventHandler.call(externalEventHandlers, event);\n      if (!event.defaultMuiPrevented) {\n        var action = {\n          type: SelectActionTypes.buttonClick,\n          event: event\n        };\n        dispatch(action);\n      }\n    };\n  };\n  var createHandleButtonKeyDown = function createHandleButtonKeyDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n      (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n      if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n        event.preventDefault();\n        dispatch({\n          type: ListActionTypes.keyDown,\n          key: event.key,\n          event: event\n        });\n      }\n    };\n  };\n  var getButtonOwnRootProps = function getButtonOwnRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      onClick: createHandleButtonClick(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    };\n  };\n  var getSelectTriggerProps = function getSelectTriggerProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, getButtonOwnRootProps(otherHandlers), {\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-controls': listboxId\n    });\n  };\n  var getButtonProps = function getButtonProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var externalEventHandlers = extractEventHandlers(externalProps);\n    var combinedProps = combineHooksSlotProps(getSelectTriggerProps, getButtonRootProps);\n    return _extends({}, externalProps, combinedProps(externalEventHandlers));\n  };\n  var createListboxHandleBlur = function createListboxHandleBlur(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onBlur, _listboxRef$current;\n      (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n      if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(event.relatedTarget) || event.relatedTarget === buttonRef.current) {\n        event.defaultMuiPrevented = true;\n      }\n    };\n  };\n  var getOwnListboxHandlers = function getOwnListboxHandlers() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      onBlur: createListboxHandleBlur(otherHandlers)\n    };\n  };\n  var getListboxProps = function getListboxProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var externalEventHandlers = extractEventHandlers(externalProps);\n    var getCombinedRootProps = combineHooksSlotProps(getOwnListboxHandlers, getListboxRootProps);\n    return _extends({\n      id: listboxId,\n      role: 'listbox',\n      'aria-multiselectable': multiple ? 'true' : undefined\n    }, externalProps, getCombinedRootProps(externalEventHandlers));\n  };\n  React.useDebugValue({\n    selectedOptions: selectedOptions,\n    highlightedOption: highlightedOption,\n    open: open\n  });\n  var contextValue = React.useMemo(function () {\n    return _extends({}, listContextValue, compoundComponentContextValue);\n  }, [listContextValue, compoundComponentContextValue]);\n  var selectValue;\n  if (props.multiple) {\n    selectValue = selectedOptions;\n  } else {\n    selectValue = selectedOptions.length > 0 ? selectedOptions[0] : null;\n  }\n  var selectedOptionsMetadata;\n  if (multiple) {\n    selectedOptionsMetadata = selectValue.map(function (v) {\n      return getOptionMetadata(v);\n    }).filter(function (o) {\n      return o !== undefined;\n    });\n  } else {\n    var _getOptionMetadata;\n    selectedOptionsMetadata = (_getOptionMetadata = getOptionMetadata(selectValue)) != null ? _getOptionMetadata : null;\n  }\n  var createHandleHiddenInputChange = function createHandleHiddenInputChange(externalEventHandlers) {\n    return function (event) {\n      var _externalEventHandler2;\n      externalEventHandlers == null || (_externalEventHandler2 = externalEventHandlers.onChange) == null || _externalEventHandler2.call(externalEventHandlers, event);\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n      var option = options.get(event.target.value);\n\n      // support autofill\n      if (event.target.value === '') {\n        dispatch({\n          type: ListActionTypes.clearSelection\n        });\n      } else if (option !== undefined) {\n        dispatch({\n          type: SelectActionTypes.browserAutoFill,\n          item: option.value,\n          event: event\n        });\n      }\n    };\n  };\n  var getHiddenInputProps = function getHiddenInputProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({\n      name: name,\n      tabIndex: -1,\n      'aria-hidden': true,\n      required: required ? true : undefined,\n      value: getSerializedValue(selectedOptionsMetadata),\n      style: visuallyHiddenStyle\n    }, externalProps, {\n      onChange: createHandleHiddenInputChange(externalEventHandlers)\n    });\n  };\n  return {\n    buttonActive: buttonActive,\n    buttonFocusVisible: buttonFocusVisible,\n    buttonRef: mergedButtonRef,\n    contextValue: contextValue,\n    disabled: disabled,\n    dispatch: dispatch,\n    getButtonProps: getButtonProps,\n    getHiddenInputProps: getHiddenInputProps,\n    getListboxProps: getListboxProps,\n    getOptionMetadata: getOptionMetadata,\n    listboxRef: mergedListRootRef,\n    open: open,\n    options: optionValues,\n    value: selectValue,\n    highlightedOption: highlightedOption\n  };\n}\nexport { useSelect };","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","unstable_useEnhancedEffect","useEnhancedEffect","visuallyHidden","visuallyHiddenStyle","useButton","SelectActionTypes","ListActionTypes","useList","defaultOptionStringifier","useCompoundParent","extractEventHandlers","selectReducer","combineHooksSlotProps","defaultFormValueProvider","selectedOption","Array","isArray","length","JSON","stringify","map","o","value","useSelect","props","areOptionsEqual","buttonRefProp","buttonRef","defaultOpen","defaultValueProp","defaultValue","disabled","listboxIdProp","listboxId","listboxRefProp","listboxRef","multiple","name","required","onChange","onHighlightChange","onOpenChange","openProp","open","optionsParam","options","getOptionAsString","getSerializedValue","valueProp","componentName","useRef","handleButtonRef","undefined","useMemo","subitems","compoundComponentContextValue","contextValue","Map","option","index","label","ref","createRef","id","handleListboxRef","rootRef","getButtonRootProps","getRootProps","buttonActive","active","buttonFocusVisible","focusVisible","mergedButtonRef","optionValues","from","keys","getOptionByValue","useCallback","valueToGet","similarValue","find","optionValue","get","isItemDisabled","valueToCheck","_option$disabled","stringifyOption","controlledState","selectedValues","getItemId","itemValue","_options$get","handleSelectionChange","event","newValues","_newValues$","handleHighlightChange","newValue","handleStateChange","field","fieldValue","type","_buttonRef$current","current","focus","getItemDomElement","itemId","_subitems$get$ref$cur","_subitems$get","useListParameters","getInitialState","_defaultValue","highlightedValue","controlledProps","focusManagement","itemComparer","onStateChange","reducerActionContext","items","getItemAsString","selectionMode","stateReducer","dispatch","getListboxRootProps","listContextValue","state","highlightedOption","selectedOptions","mergedListRootRef","isInitiallyOpen","_getOptionByValue","optionRef","preventScroll","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","bottom","getOptionMetadata","createHandleButtonClick","externalEventHandlers","_externalEventHandler","onClick","call","defaultMuiPrevented","action","buttonClick","createHandleButtonKeyDown","otherHandlers","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","keyDown","getButtonOwnRootProps","getSelectTriggerProps","role","getButtonProps","externalProps","combinedProps","createListboxHandleBlur","_otherHandlers$onBlur","_listboxRef$current","onBlur","contains","relatedTarget","getOwnListboxHandlers","getListboxProps","getCombinedRootProps","useDebugValue","selectValue","selectedOptionsMetadata","v","filter","_getOptionMetadata","createHandleHiddenInputChange","_externalEventHandler2","target","clearSelection","browserAutoFill","item","getHiddenInputProps","tabIndex","style"],"sources":["/home/bee/Desktop/nobisoft/test_socketio/react-socketio-notification/client/node_modules/@mui/base/useSelect/useSelect.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect, visuallyHidden as visuallyHiddenStyle } from '@mui/utils';\nimport { useButton } from '../useButton';\nimport { SelectActionTypes } from './useSelect.types';\nimport { ListActionTypes, useList } from '../useList';\nimport { defaultOptionStringifier } from './defaultOptionStringifier';\nimport { useCompoundParent } from '../useCompound';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { selectReducer } from './selectReducer';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\nfunction defaultFormValueProvider(selectedOption) {\n  if (Array.isArray(selectedOption)) {\n    if (selectedOption.length === 0) {\n      return '';\n    }\n    return JSON.stringify(selectedOption.map(o => o.value));\n  }\n  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {\n    return '';\n  }\n  if (typeof selectedOption.value === 'string' || typeof selectedOption.value === 'number') {\n    return selectedOption.value;\n  }\n  return JSON.stringify(selectedOption.value);\n}\n\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useSelect API](https://mui.com/base-ui/react-select/hooks-api/#use-select)\n */\nfunction useSelect(props) {\n  const {\n    areOptionsEqual,\n    buttonRef: buttonRefProp,\n    defaultOpen = false,\n    defaultValue: defaultValueProp,\n    disabled = false,\n    listboxId: listboxIdProp,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    name,\n    required,\n    onChange,\n    onHighlightChange,\n    onOpenChange,\n    open: openProp,\n    options: optionsParam,\n    getOptionAsString = defaultOptionStringifier,\n    getSerializedValue = defaultFormValueProvider,\n    value: valueProp,\n    componentName = 'useSelect'\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const listboxId = useId(listboxIdProp);\n  let defaultValue;\n  if (valueProp === undefined && defaultValueProp === undefined) {\n    defaultValue = [];\n  } else if (defaultValueProp !== undefined) {\n    if (multiple) {\n      defaultValue = defaultValueProp;\n    } else {\n      defaultValue = defaultValueProp == null ? [] : [defaultValueProp];\n    }\n  }\n  const value = React.useMemo(() => {\n    if (valueProp !== undefined) {\n      if (multiple) {\n        return valueProp;\n      }\n      return valueProp == null ? [] : [valueProp];\n    }\n    return undefined;\n  }, [valueProp, multiple]);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const options = React.useMemo(() => {\n    if (optionsParam != null) {\n      return new Map(optionsParam.map((option, index) => [option.value, {\n        value: option.value,\n        label: option.label,\n        disabled: option.disabled,\n        ref: /*#__PURE__*/React.createRef(),\n        id: `${listboxId}_${index}`\n      }]));\n    }\n    return subitems;\n  }, [optionsParam, subitems, listboxId]);\n  const handleListboxRef = useForkRef(listboxRefProp, listboxRef);\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible,\n    rootRef: mergedButtonRef\n  } = useButton({\n    disabled,\n    rootRef: handleButtonRef\n  });\n  const optionValues = React.useMemo(() => Array.from(options.keys()), [options]);\n  const getOptionByValue = React.useCallback(valueToGet => {\n    // This can't be simply `options.get(valueToGet)` because of the `areOptionsEqual` prop.\n    // If it's provided, we assume that the user wants to compare the options by value.\n    if (areOptionsEqual !== undefined) {\n      const similarValue = optionValues.find(optionValue => areOptionsEqual(optionValue, valueToGet));\n      return options.get(similarValue);\n    }\n    return options.get(valueToGet);\n  }, [options, areOptionsEqual, optionValues]);\n  const isItemDisabled = React.useCallback(valueToCheck => {\n    var _option$disabled;\n    const option = getOptionByValue(valueToCheck);\n    return (_option$disabled = option == null ? void 0 : option.disabled) != null ? _option$disabled : false;\n  }, [getOptionByValue]);\n  const stringifyOption = React.useCallback(valueToCheck => {\n    const option = getOptionByValue(valueToCheck);\n    if (!option) {\n      return '';\n    }\n    return getOptionAsString(option);\n  }, [getOptionByValue, getOptionAsString]);\n  const controlledState = React.useMemo(() => ({\n    selectedValues: value,\n    open: openProp\n  }), [value, openProp]);\n  const getItemId = React.useCallback(itemValue => {\n    var _options$get;\n    return (_options$get = options.get(itemValue)) == null ? void 0 : _options$get.id;\n  }, [options]);\n  const handleSelectionChange = React.useCallback((event, newValues) => {\n    if (multiple) {\n      onChange == null || onChange(event, newValues);\n    } else {\n      var _newValues$;\n      onChange == null || onChange(event, (_newValues$ = newValues[0]) != null ? _newValues$ : null);\n    }\n  }, [multiple, onChange]);\n  const handleHighlightChange = React.useCallback((event, newValue) => {\n    onHighlightChange == null || onHighlightChange(event, newValue != null ? newValue : null);\n  }, [onHighlightChange]);\n  const handleStateChange = React.useCallback((event, field, fieldValue) => {\n    if (field === 'open') {\n      onOpenChange == null || onOpenChange(fieldValue);\n      if (fieldValue === false && (event == null ? void 0 : event.type) !== 'blur') {\n        var _buttonRef$current;\n        (_buttonRef$current = buttonRef.current) == null || _buttonRef$current.focus();\n      }\n    }\n  }, [onOpenChange]);\n  const getItemDomElement = React.useCallback(itemId => {\n    var _subitems$get$ref$cur, _subitems$get;\n    if (itemId == null) {\n      return null;\n    }\n    return (_subitems$get$ref$cur = (_subitems$get = subitems.get(itemId)) == null ? void 0 : _subitems$get.ref.current) != null ? _subitems$get$ref$cur : null;\n  }, [subitems]);\n  const useListParameters = {\n    getInitialState: () => {\n      var _defaultValue;\n      return {\n        highlightedValue: null,\n        selectedValues: (_defaultValue = defaultValue) != null ? _defaultValue : [],\n        open: defaultOpen\n      };\n    },\n    getItemId,\n    controlledProps: controlledState,\n    focusManagement: 'DOM',\n    getItemDomElement,\n    itemComparer: areOptionsEqual,\n    isItemDisabled,\n    rootRef: handleListboxRef,\n    onChange: handleSelectionChange,\n    onHighlightChange: handleHighlightChange,\n    onStateChange: handleStateChange,\n    reducerActionContext: React.useMemo(() => ({\n      multiple\n    }), [multiple]),\n    items: optionValues,\n    getItemAsString: stringifyOption,\n    selectionMode: multiple ? 'multiple' : 'single',\n    stateReducer: selectReducer,\n    componentName\n  };\n  const {\n    dispatch,\n    getRootProps: getListboxRootProps,\n    contextValue: listContextValue,\n    state: {\n      open,\n      highlightedValue: highlightedOption,\n      selectedValues: selectedOptions\n    },\n    rootRef: mergedListRootRef\n  } = useList(useListParameters);\n\n  // store the initial open state to prevent focus stealing\n  // (the first option gets focused only when the select is opened by the user)\n  const isInitiallyOpen = React.useRef(open);\n  useEnhancedEffect(() => {\n    if (open && highlightedOption !== null) {\n      var _getOptionByValue;\n      const optionRef = (_getOptionByValue = getOptionByValue(highlightedOption)) == null ? void 0 : _getOptionByValue.ref;\n      if (!listboxRef.current || !(optionRef != null && optionRef.current)) {\n        return;\n      }\n      if (!isInitiallyOpen.current) {\n        optionRef.current.focus({\n          preventScroll: true\n        });\n      }\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [open, highlightedOption, getOptionByValue]);\n  const getOptionMetadata = React.useCallback(optionValue => getOptionByValue(optionValue), [getOptionByValue]);\n  const createHandleButtonClick = externalEventHandlers => event => {\n    var _externalEventHandler;\n    externalEventHandlers == null || (_externalEventHandler = externalEventHandlers.onClick) == null || _externalEventHandler.call(externalEventHandlers, event);\n    if (!event.defaultMuiPrevented) {\n      const action = {\n        type: SelectActionTypes.buttonClick,\n        event\n      };\n      dispatch(action);\n    }\n  };\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      dispatch({\n        type: ListActionTypes.keyDown,\n        key: event.key,\n        event\n      });\n    }\n  };\n  const getButtonOwnRootProps = (otherHandlers = {}) => ({\n    onClick: createHandleButtonClick(otherHandlers),\n    onKeyDown: createHandleButtonKeyDown(otherHandlers)\n  });\n  const getSelectTriggerProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, getButtonOwnRootProps(otherHandlers), {\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-controls': listboxId\n    });\n  };\n  const getButtonProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const combinedProps = combineHooksSlotProps(getSelectTriggerProps, getButtonRootProps);\n    return _extends({}, externalProps, combinedProps(externalEventHandlers));\n  };\n  const createListboxHandleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur, _listboxRef$current;\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(event.relatedTarget) || event.relatedTarget === buttonRef.current) {\n      event.defaultMuiPrevented = true;\n    }\n  };\n  const getOwnListboxHandlers = (otherHandlers = {}) => ({\n    onBlur: createListboxHandleBlur(otherHandlers)\n  });\n  const getListboxProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const getCombinedRootProps = combineHooksSlotProps(getOwnListboxHandlers, getListboxRootProps);\n    return _extends({\n      id: listboxId,\n      role: 'listbox',\n      'aria-multiselectable': multiple ? 'true' : undefined\n    }, externalProps, getCombinedRootProps(externalEventHandlers));\n  };\n  React.useDebugValue({\n    selectedOptions,\n    highlightedOption,\n    open\n  });\n  const contextValue = React.useMemo(() => _extends({}, listContextValue, compoundComponentContextValue), [listContextValue, compoundComponentContextValue]);\n  let selectValue;\n  if (props.multiple) {\n    selectValue = selectedOptions;\n  } else {\n    selectValue = selectedOptions.length > 0 ? selectedOptions[0] : null;\n  }\n  let selectedOptionsMetadata;\n  if (multiple) {\n    selectedOptionsMetadata = selectValue.map(v => getOptionMetadata(v)).filter(o => o !== undefined);\n  } else {\n    var _getOptionMetadata;\n    selectedOptionsMetadata = (_getOptionMetadata = getOptionMetadata(selectValue)) != null ? _getOptionMetadata : null;\n  }\n  const createHandleHiddenInputChange = externalEventHandlers => event => {\n    var _externalEventHandler2;\n    externalEventHandlers == null || (_externalEventHandler2 = externalEventHandlers.onChange) == null || _externalEventHandler2.call(externalEventHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    const option = options.get(event.target.value);\n\n    // support autofill\n    if (event.target.value === '') {\n      dispatch({\n        type: ListActionTypes.clearSelection\n      });\n    } else if (option !== undefined) {\n      dispatch({\n        type: SelectActionTypes.browserAutoFill,\n        item: option.value,\n        event\n      });\n    }\n  };\n  const getHiddenInputProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({\n      name,\n      tabIndex: -1,\n      'aria-hidden': true,\n      required: required ? true : undefined,\n      value: getSerializedValue(selectedOptionsMetadata),\n      style: visuallyHiddenStyle\n    }, externalProps, {\n      onChange: createHandleHiddenInputChange(externalEventHandlers)\n    });\n  };\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    buttonRef: mergedButtonRef,\n    contextValue,\n    disabled,\n    dispatch,\n    getButtonProps,\n    getHiddenInputProps,\n    getListboxProps,\n    getOptionMetadata,\n    listboxRef: mergedListRootRef,\n    open,\n    options: optionValues,\n    value: selectValue,\n    highlightedOption\n  };\n}\nexport { useSelect };"],"mappings":"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"},"metadata":{},"sourceType":"module"}